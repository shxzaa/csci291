#include <stdio.h>
#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

// Constants for coffee types and their prices
const float ESPRESSO_COST = 3.5;
const float CAPPUCCINO_COST = 4.5;
const float MOCHA_COST = 5.5;

// Ingredient requirements for each coffee type
#define ESPRESSO_BEANS 8
#define ESPRESSO_WATER 30

#define CAPPUCCINO_BEANS 8
#define CAPPUCCINO_WATER 30
#define CAPPUCCINO_MILK 70

#define MOCHA_BEANS 8
#define MOCHA_WATER 39
#define MOCHA_MILK 160
#define MOCHA_SYRUP 30

// Admin passcode and sales tracking
#define ADMIN_PASSCODE "VAV"
float total_sales = 0;

// Ingredient levels (available amounts)
float coffee_level = 300; // in grams
float water_level = 300;  // in milliliters
float milk_level = 300;   // in milliliters
float syrup_level = 300;  // in milliliters

// Function Prototypes
void order_coffee();
void process_payment(float amount_due);
void admin_menu();
void display_stock_and_sales();
void restock_ingredients();
void change_coffee_prices();

// Main Function
int main() {
    int user_choice;

    while (1) {
        printf("\n\n*MENU*\n");
        printf("1. Order Coffee\n");
        printf("2. Enter Admin Menu\n");
        printf("3. Exit\n");
        printf("Please select an option: ");
        scanf("%d", &user_choice);

        switch (user_choice) {
            case 1:
                order_coffee();
                break;
            case 2:
                admin_menu();
                break;
            case 3:
                printf("Exiting program...\n");
                return 0;
            default:
                printf("Invalid option.\n");
        }
    }
    return 0;
}

// Admin Menu Function
void admin_menu() {
    char input_pass[50];
    int admin_option;

    printf("Enter admin password: ");
    scanf("%s", input_pass);

    if (strcmp(input_pass, ADMIN_PASSCODE) == 0) {
        printf("Access granted.\n");

        while (1) {
            printf("ADMIN MENU:\n");
            printf("1. Display Stock and Sales\n");
            printf("2. Restock Ingredients\n");
            printf("3. Change Coffee Prices\n");
            printf("4. Exit\n");
            printf("Select an option: ");
            scanf("%d", &admin_option);

            switch (admin_option) {
                case 1:
                    display_stock_and_sales();
                    break;
                case 2:
                    restock_ingredients();
                    break;
                case 3:
                    change_coffee_prices();
                    break;
                case 4:
                    printf("Exiting admin menu...\n");
                    return;
                default:
                    printf("Invalid selection.\n");
            }
        }
    } else {
        printf("Incorrect password.\n");
    }
}

// Display Stock and Sales Function
void display_stock_and_sales() {
    printf("Current stock levels and sales:\n");
    printf("Coffee beans: %.2f g\n", coffee_level);
    printf("Water: %.2f ml\n", water_level);
    printf("Milk: %.2f ml\n", milk_level);
    printf("Chocolate syrup: %.2f ml\n", syrup_level);
    printf("Total sales: %.2f dhs\n", total_sales);
}

// Order Coffee Function
void order_coffee() {
    int coffee_choice;

    printf("\n\n*COFFEE MENU*\n");
    printf("1. Espresso\t\t%.2f\n", ESPRESSO_COST);
    printf("2. Cappuccino\t\t%.2f\n", CAPPUCCINO_COST);
    printf("3. Mocha\t\t%.2f\n", MOCHA_COST);
    printf("0. Cancel Order\n");
    printf("Choose your coffee: ");
    scanf("%d", &coffee_choice);

    switch (coffee_choice) {
        case 1:
            printf("You've chosen Espresso.\n");
            if (ESPRESSO_BEANS <= coffee_level && ESPRESSO_WATER <= water_level) {
                printf("Brewing your Espresso...\n");
                process_payment(ESPRESSO_COST);
                coffee_level -= ESPRESSO_BEANS;
                water_level -= ESPRESSO_WATER;
            } else {
                printf("Insufficient ingredients for Espresso.\n");
            }
            break;
        case 2:
            printf("You've chosen Cappuccino.\n");
            if (CAPPUCCINO_BEANS <= coffee_level && CAPPUCCINO_WATER <= water_level && CAPPUCCINO_MILK <= milk_level) {
                printf("Brewing your Cappuccino...\n");
                process_payment(CAPPUCCINO_COST);
                coffee_level -= CAPPUCCINO_BEANS;
                water_level -= CAPPUCCINO_WATER;
                milk_level -= CAPPUCCINO_MILK;
            } else {
                printf("Insufficient ingredients for Cappuccino.\n");
            }
            break;
        case 3:
            printf("You've chosen Mocha.\n");
            if (MOCHA_BEANS <= coffee_level && MOCHA_WATER <= water_level && MOCHA_MILK <= milk_level && MOCHA_SYRUP <= syrup_level) {
                printf("Brewing your Mocha...\n");
                process_payment(MOCHA_COST);
                coffee_level -= MOCHA_BEANS;
                water_level -= MOCHA_WATER;
                milk_level -= MOCHA_MILK;
                syrup_level -= MOCHA_SYRUP;
            } else {
                printf("Insufficient ingredients for Mocha.\n");
            }
            break;
        case 0:
            printf("Order canceled.\n");
            break;
        default:
            printf("Invalid selection.\n");
    }
}

// Payment Processing Function
void process_payment(float amount_due) {
    float total_inserted = 0;
    float coin;

    while (total_inserted < amount_due) {
        printf("Insert 1 dh or 0.5 dh: ");
        scanf("%f", &coin);

        if (coin == 1) {
            total_inserted += 1;
        } else if (coin == 0.5) {
            total_inserted += 0.5;
        } else {
            printf("Invalid coin.\n");
        }
    }

    if (total_inserted > amount_due) {
        float change = total_inserted - amount_due;
        printf("Your change is %.1f dhs.\n", change);
    }

    total_sales += amount_due;
    printf("Thank you! Enjoy your coffee!\n");
}

// Restocking Ingredients Function
void restock_ingredients() {
    int choice;
    int quantity;
    srand(time(NULL));

    printf("Restock Ingredients:\n");
    printf("1. Coffee Beans\n");
    printf("2. Water\n");
    printf("3. Milk\n");
    printf("4. Chocolate Syrup\n");
    printf("0. Exit\n");
    printf("Select item to restock: ");
    scanf("%d", &choice);

    quantity = 100 + rand() % 400;

    switch (choice) {
        case 1:
            printf("Restocking %d grams of coffee beans.\n", quantity);
            coffee_level += quantity;
            printf("New coffee beans level: %.2f g\n", coffee_level);
            break;
        case 2:
            printf("Restocking %d ml of water.\n", quantity);
            water_level += quantity;
            printf("New water level: %.2f ml\n", water_level);
            break;
        case 3:
            printf("Restocking %d ml of milk.\n", quantity);
            milk_level += quantity;
            printf("New milk level: %.2f ml\n", milk_level);
            break;
        case 4:
            printf("Restocking %d ml of syrup.\n", quantity);
            syrup_level += quantity;
            printf("New syrup level: %.2f ml\n", syrup_level);
            break;
        case 0:
            printf("Exiting restock mode.\n");
            break;
        default:
            printf("Invalid selection.\n");
    }
}

// Change Coffee Prices Function
void change_coffee_prices() {
    int coffee_type;
    float new_price;

    printf("Change Coffee Prices:\n");
    printf("1. Espresso\n");
    printf("2. Cappuccino\n");
    printf("3. Mocha\n");
    printf("Select coffee type: ");
    scanf("%d", &coffee_type);

    switch (coffee_type) {
        case 1:
            printf("Current price of Espresso: %.2f\n", ESPRESSO_COST);
            printf("Enter new price: ");
            scanf("%f", &new_price);
            // Note: Here we cannot change the constant directly
            printf("New Espresso price: %.2f\n", new_price);
            break;
        case 2:
            printf("Current price of Cappuccino: %.2f\n", CAPPUCCINO_COST);
            printf("Enter new price: ");
            scanf("%f", &new_price);
            printf("New Cappuccino price: %.2f\n", new_price);
            break;
        case 3:
            printf("Current price of Mocha: %.2f\n", MOCHA_COST);
            printf("Enter new price: ");
            scanf("%f", &new_price);
            printf("New Mocha price: %.2f\n", new_price);
            break;
        default:
            printf("Invalid selection.\n");
    }
}
